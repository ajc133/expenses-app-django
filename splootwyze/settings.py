"""
Django settings for splootwyze project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# FileAwareEnv lets me pass SPLOOTWYZE_SECRET_KEY_FILE and it'll be read into SPLOOTWYZE_SECRET_KEY for me
# https://django-environ.readthedocs.io/en/latest/tips.html#docker-style-file-based-variables
env = environ.FileAwareEnv(
    # set casting, default value
    SPLOOTWYZE_DEBUG=(bool, False),
    SPLOOTWYZE_MEDIA_ROOT=(str, BASE_DIR / "media"),
    SPLOOTWYZE_STATIC_ROOT=(str, BASE_DIR / "staticfiles"),
    SPLOOTWYZE_ALLOWED_HOSTS=(list, ["127.0.0.1", "localhost"]),
    SPLOOTWYZE_SQLITE_PATH=(str, BASE_DIR / "db.sqlite3"),
)

# Take environment variables from .env file
environ.Env.read_env(BASE_DIR / ".env")

DEBUG = env("SPLOOTWYZE_DEBUG")

# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/
SECRET_KEY = env("SPLOOTWYZE_SECRET_KEY")

LOGIN_URL = "login"

LOGIN_REDIRECT_URL = "main"

LOGOUT_REDIRECT_URL = "main"

MEDIA_URL = "uploads/"

MEDIA_ROOT = env("SPLOOTWYZE_MEDIA_ROOT")

ALLOWED_HOSTS = env("SPLOOTWYZE_ALLOWED_HOSTS")

CSRF_TRUSTED_ORIGINS = ["https://" + host for host in ALLOWED_HOSTS]

# Prod security
if not DEBUG:
    SECURE_PROXY_SSL_HEADER = ("X-Forwarded-Proto", "https")
    SESSION_COOKIE_AGE = 315360000  # 10 years
    SESSION_SAVE_EVERY_REQUEST = True

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",
    "expenses",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "splootwyze.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "splootwyze.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": env("SPLOOTWYZE_SQLITE_PATH"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "America/Los_Angeles"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = env("SPLOOTWYZE_STATIC_ROOT")

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# Plugins

DJANGORESIZED_DEFAULT_NORMALIZE_ROTATION = False
